plugins {
    id 'fabric-loom' version '1.4-SNAPSHOT'
    id 'maven-publish'

    // 用于模组发布
    id "com.modrinth.minotaur" version "2.+"
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id "com.github.breadmoirai.github-release" version "2.5.2"
}

archivesBaseName = project.archives_base_name + "-fabric"
version = project.mod_version + '-mc' + project.minecraft_version
group = project.maven_group

allprojects {
    apply plugin: 'fabric-loom'
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    dependencies {
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    }

    loom {
        runs {
            client {
                programArg "-username=Solid"
            }
        }

        runConfigs.configureEach {
            it.configName = "Minecraft Fabric ${it.name.capitalize()}"
            runDir = project.relativePath(project(':').file('run')).toString()
        }
    }

    dependencies {
        modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

        // Fabric API
        modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}")
        // ModMenu 模组
        modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")

        // 下面两个模组均存储于本地的 maven 仓库。

        // BRRP 模组
        def brrp_mc_version = project.properties.getOrDefault "brrp_mc_version", project.minecraft_version
        modImplementation "pers.solid:brrp-fabric:${project.brrp_version}-${brrp_mc_version}"

        // 由于新版的 Loom 没有 @CanIgnoreReturnValue 等注解，故在这里手动添加。
        modImplementation "com.google.errorprone:error_prone_annotations:+"
    }

    repositories {
        // Mod Menu 模组
        maven { url 'https://maven.terraformersmc.com/releases/' }
        /*
        这个是存储在 GitHub 上的 BRRP 模组
        maven {
            url 'https://github.com/SolidBlock-cn/mvn-repo/main'
        }*/
        // 合理排序和 BRRP 模组。这两个模组均存储于本地的 maven 仓库。
        mavenLocal()
    }
}

subprojects {
    apply plugin: 'fabric-loom'
    apply plugin: 'maven-publish'

    processResources {
        inputs.property "version", project.mod_version

        filesMatching("fabric.mod.json") {
            expand "version": project.mod_version
        }
    }

    tasks.withType(JavaCompile).configureEach {
        // ensure that the encoding is set to UTF-8, no matter what the system default is
        // this fixes some edge cases with special characters not displaying correctly
        // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
        // If Javadoc is generated, this must be specified in that task too.
        it.options.encoding = "UTF-8"

        // Minecraft 1.17 (21w19a) upwards uses Java 16.
        it.options.release = 17
    }

    java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()
    }

    jar {
        from("LICENSE") {
            rename { "${it}_${project.archivesBaseName}" }
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }

        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
        repositories {
            // Add repositories to publish to here.
            // Notice: This block does NOT have the same function as the block in the top level.
            // The repositories here will be used for publishing your artifact, not for
            // retrieving dependencies.
        }
    }
}

ext {
    release_type = mod_version.contains('beta') ? 'beta' : 'release' as String
}

repositories {
    // Mods on CurseForge
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    // Cloth Config、Roughly Enough Items
    maven { url "https://maven.shedaniel.me/" }
}

dependencies {
    if (project.hasProperty('imblocker_version') && !project.imblocker_version.isEmpty()) {
        modRuntimeOnly "curse.maven:imblockerfabric-399225:$project.imblocker_version"
    }
    if (project.hasProperty('rei_version') && !project.rei_version.isEmpty()) {
        modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:$project.rei_version"
    }
    subprojects.each {
        implementation project(path: it.path, configuration: "namedElements")
    }
}